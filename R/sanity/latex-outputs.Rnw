\documentclass{article}
\usepackage{graphicx}
\usepackage[left=1.00in, right=1.00in, top=1.00in, bottom=1.00in]{geometry}
\usepackage{hyperref}

\hypersetup{
    colorlinks,
    citecolor=black,
    filecolor=black,
    linkcolor=blue,
    urlcolor=black
}

\DeclareGraphicsExtensions{.png,.jpg}

\title{Appendix and Model Output Plots}
\author{Daniel Chen \\ Mailman School of Public health \\ Columbia University}
\date{}

<<set-options, include=FALSE>>=
opts_chunk$set(cashe=TRUE, dev='png', dpi=150)
@

\begin{document}
\maketitle
\tableofcontents

\newpage

\section{Plotting Function}
\label{sec:plot-function}
For the plots, x-axis is time, y-axis is processing unit activation value

<<plotting function>>=
plot.thesis.data <- function(data, numAgents, numTimeTicks, subx = 0, xmin = 0, xmax = 10) {
  # Takes a CSV from my thesis output,
  # assign's column names,
  # converts processing unit values into numerics
  # plots the average activation value for each processing unit for each agent in each time tick
  #
  # Args:
  #   data: String value of the directory and file of CSV
  #   numAgents: Number of agents ran in the simulation of the CSV
  #   numTimeTicks: Number of time ticks ran in the simulation of the CSV
  #   subx: defaults to 0, used to section regions of the x axis,
  #           0 for no sub-sectioning, 1 for yes sub-sectioning
  #   xmin: defaults to 0, the lower bound of the x-axis if subx is 1
  #   xmax: defaults to 0, the upper bound of the x-axis if subx is 1
  #
  # Returns:
  #   Line graph

  # Load data
  x <- read.csv(data, header=FALSE, stringsAsFactors=FALSE)

  # Rename dataframe column names
  names(x) <- c("time", "agent",
                       "p1", "p2", "p3", "p4", "p5",
                       "n1", "n2", "n3", "n4", "n5")

  # Convert string factors into numerics
  for (i in 3:12) {
    x[ ,i] <- as.numeric(x[ ,i])
  }

  # 1 - 5 for 5 PU in each valence bank
  df.pos.neg.pu.values <- as.data.frame(vector(length = 10))
  for (i in 1:5) {
    pos.neg.pu.values <- x[seq(i, numTimeTicks * numAgents ,numAgents),]
  }
  x.1 <- x[seq(1, numTimeTicks * numAgents ,numAgents),]
  x.2 <- x[seq(2, numTimeTicks * numAgents ,numAgents),]
  x.3 <- x[seq(3, numTimeTicks * numAgents ,numAgents),]
  x.4 <- x[seq(4, numTimeTicks * numAgents ,numAgents),]
  x.5 <- x[seq(5, numTimeTicks * numAgents ,numAgents),]

  x.1.ave.pos <- apply(x.1[,c(3,4,5,6,7)],1, mean)
  x.1.ave.neg <- apply(x.1[,c(8,9,10,11,12)],1,mean)

  x.2.ave.pos <- apply(x.2[,c(3,4,5,6,7)],1,mean)
  x.2.ave.neg <- apply(x.2[,c(8,9,10,11,12)],1,mean)

  x.3.ave.pos <- apply(x.3[,c(3,4,5,6,7)],1,mean)
  x.3.ave.neg <- apply(x.3[,c(8,9,10,11,12)],1,mean)

  x.4.ave.pos <- apply(x.4[,c(3,4,5,6,7)],1,mean)
  x.4.ave.neg <- apply(x.4[,c(8,9,10,11,12)],1,mean)

  x.5.ave.pos <- apply(x.5[,c(3,4,5,6,7)],1,mean)
  x.5.ave.neg <- apply(x.5[,c(8,9,10,11,12)],1,mean)

  if (subx == 0)
  {
#     print(head(x, numAgents))
#     print(tail(x, numAgents))

    plot(x.1.ave.pos,lty=1,col=1,type="b",ylim=c(0,1))
    lines(x.1.ave.neg, lty=2, col=1, type="b", lwd=3)

    lines(x.2.ave.pos,ylim=c(0,1),lty=1,col=2,type="b")
    lines(x.2.ave.neg,lty=2,col=2,type="b", lwd=3)

    lines(x.3.ave.pos,lty=1,col=3,type="b")
    lines(x.3.ave.neg,lty=2,col=3,type="b", lwd=3)

    lines(x.4.ave.pos,lty=1,col=4,type="b")
    lines(x.4.ave.neg,lty=2,col=4,type="b", lwd=3)

    lines(x.5.ave.pos,lty=1,col=5,type="b")
    lines(x.5.ave.neg,lty=2,col=5,type="b", lwd=3)
  }

  if (subx == 1)
    {
#       print(head(x, numAgents))
#       print(tail(x, numAgents))

      plot(x.1.ave.pos, lty = 1, col = 1, type = "b", ylim = c(0, 1), xlim = c(xmin, xmax))
      lines(x.1.ave.neg,lty=2, col=1, type="b", lwd=3)

      lines(x.2.ave.pos,lty=1,col=2,type="b")
      lines(x.2.ave.neg,lty=2,col=2,type="b", lwd=3)

      lines(x.3.ave.pos,lty=1,col=3,type="b")
      lines(x.3.ave.neg,lty=2,col=3,type="b", lwd=3)

      lines(x.4.ave.pos,lty=1,col=4,type="b")
      lines(x.4.ave.neg,lty=2,col=4,type="b", lwd=3)

      lines(x.5.ave.pos,lty=1,col=5,type="b")
      lines(x.5.ave.neg,lty=2,col=5,type="b", lwd=3)
    }
  }
@

\newpage

\section{Sanity Checks}
\label{sec:sanity-checks}

\subsection{Sanity Check 1}
\label{sec:sanity1}
Sanity Case:
\begin{itemize}
  \item Agents Activated: Agent 1 ont
  \item Valence Bank: positive only
  \begin{itemize}
      \item Valence bank activation: 1's
  \end{itemize}
  \item Valence bank Weights: random
  \begin{itemize}
      \item opposite 0
      \item corresponding 0
      \item carry over = 0.2
      \item bias = 0
      \item decay = -0.5
  \end{itemize}
  \item Network: circle
\end{itemize}

%
% \newpage
% <<plot-sanity-1, fig.cap="Sanity Checking 1", fig.show='asis'>>=
% plot.thesis.data("/home/dchen/git/repast-neural-network-agent-based-model/R/data/agent1pos1.csv",
%   10, 10)
% @
%
% \newpage
% \subsubsection{Sanity 1}
% <<plot-sanity1-v2, fig.cap="Sanity 1 with re-implemented edge list", fig.show='asis'>>=
% plot.thesis.data("/home/dchen/git/repast-neural-network-agent-based-model/R/data/sanity1-new-external.csv", 10, 10)
% @

\newpage
\subsubsection{Sanity 1, no step}
<<plot-sanity1-v2-nostep, fig.cap="Sanity 1 with re-implemented edge list, no step", fig.show='asis'>>=
plot.thesis.data("/home/dchen/git/repast-neural-network-agent-based-model/R/data/sanity1-new-external-no-step.csv", 10, 10)
@

\newpage
\subsection{Sanity Check 2}
\label{sec:sanity2}
Sanity Case:
\begin{itemize}
  \item Agents Activated: Agent 1 ont
  \item Valence Bank: positive only
  \begin{itemize}
      \item Valence bank activation: \textbf{random}
  \end{itemize}
  \item Valence bank Weights: random
  \begin{itemize}
      \item opposite 0
      \item corresponding 0
      \item carry over = 0.2
      \item bias = 0
      \item decay = -0.5
  \end{itemize}
  \item Network: circle
\end{itemize}
%
% \newpage
% <<plot-sanity-2, fig.cap="Sanity Checking 2", fig.show='asis'>>=
% plot.thesis.data("/home/dchen/git/repast-neural-network-agent-based-model/R/data/agent1posrandom.csv", 10, 10)
% @
%
% \newpage
% \subsubsection{Sanity 2}
% <<plot-sanity-2-v2, fig.cap="Sanity Checking 2 with re-implemented edge list", fig.show='asis'>>=
% plot.thesis.data("/home/dchen/git/repast-neural-network-agent-based-model/R/data/sanity2-new-external.csv", 10, 10)
% @

\newpage
\subsubsection{Sanity 2, no step}
<<plot-sanity-2-v2-nostep, fig.cap="Sanity Checking 2 with re-implemented edge list, no step", fig.show='asis'>>=
plot.thesis.data("/home/dchen/git/repast-neural-network-agent-based-model/R/data/sanity2-new-external-no-step.csv", 10, 10)
@

\newpage
\subsection{Sanity Check 3}
\label{sec:sanity3}
Sanity Case:
\begin{itemize}
  \item Agents Activated: Agent 1 ont
  \item Valence Bank: \textbf{both}
  \begin{itemize}
      \item Valence bank activation: random
  \end{itemize}
  \item Valence bank Weights: random
  \begin{itemize}
      \item opposite 0
      \item corresponding 0
      \item carry over = 0.2
      \item bias = 0
      \item decay = -0.5
  \end{itemize}
  \item Network: circle
\end{itemize}
%
% \newpage
% <<plot-sanity-3, fig.cap="Sanity Checking 3", fig.show='asis'>>=
% plot.thesis.data("/home/dchen/git/repast-neural-network-agent-based-model/R/data/agent1bothrandom.csv", 10, 10)
% @
%
% \newpage
% \subsubsection{Sanity 3}
% <<plot-sanity-3-v2, fig.cap="Sanity Checking 3 with re-implemented edge list", fig.show='asis'>>=
% plot.thesis.data("/home/dchen/git/repast-neural-network-agent-based-model/R/data/sanity3-new-external.csv", 10, 10)
% @

\newpage
\subsubsection{Sanity 3, no step}
<<plot-sanity-3-v2-nostep, fig.cap="Sanity Checking 3 with re-implemented edge list, no step", fig.show='asis'>>=
plot.thesis.data("/home/dchen/git/repast-neural-network-agent-based-model/R/data/sanity3-new-external-no-step.csv", 10, 10)
@

\newpage
\subsection{Sanity Check 4}
\label{sec:sanity4}
Sanity Case:
\begin{itemize}
  \item Agents Activated: Agent 1 ont
  \item Valence Bank: both
  \begin{itemize}
      \item Valence bank activation: random
  \end{itemize}
  \item Valence bank Weights: random
  \begin{itemize}
      \item opposite \textbf{-0.2}
      \item corresponding \textbf{0.5}
      \item carry over = 0.2
      \item bias = 0
      \item decay = -0.5
  \end{itemize}
  \item Network: circle
\end{itemize}
%
% \newpage
% <<plot-sanity-4, fig.cap="Sanity Checking 4", fig.show='asis'>>=
% plot.thesis.data("/home/dchen/git/repast-neural-network-agent-based-model/R/data/agent1bothrandom-weights.csv", 10, 10)
% @
%
% \newpage
% \subsubsection{Sanity 4}
% <<plot-sanity-4-v2, fig.cap="Sanity Checking 4 with re-implemented edge list", fig.show='asis'>>=
% plot.thesis.data("/home/dchen/git/repast-neural-network-agent-based-model/R/data/sanity4-new-external.csv", 10, 10)
% @

\newpage
\subsubsection{Sanity 4, no step}
<<plot-sanity-4-v2-nostep, fig.cap="Sanity Checking 4 with re-implemented edge list, no step", fig.show='asis'>>=
plot.thesis.data("/home/dchen/git/repast-neural-network-agent-based-model/R/data/sanity4-new-external-no-step.csv", 10, 10)
@

\newpage
\subsection{Sanity Check 5}
\label{sec:sanity5}
Sanity Case:
\begin{itemize}
  \item Agents Activated: \textbf{All}
  \item Valence Bank: both
  \begin{itemize}
      \item Valence bank activation: random
  \end{itemize}
  \item Valence bank Weights: random
  \begin{itemize}
      \item opposite -0.2
      \item corresponding 0.5
      \item carry over = 0.2
      \item bias = 0
      \item decay = -0.5
  \end{itemize}
  \item Network: circle
\end{itemize}
%
% \newpage
% <<plot-sanity-5, fig.cap="Sanity Checking 5", fig.show='asis'>>=
% plot.thesis.data("/home/dchen/git/repast-neural-network-agent-based-model/R/data/randomvaluesetweight.csv", 10, 10)
% @
%
% \newpage
% \subsubsection{Sanity 5}
% <<plot-sanity-5-v2, fig.cap="Sanity Checking 5 with re-implemented edge list", fig.show='asis'>>=
% plot.thesis.data("/home/dchen/git/repast-neural-network-agent-based-model/R/data/sanity5-new-external.csv", 10, 10)
% @

\newpage
\subsubsection{Sanity 5, no step}
<<plot-sanity-5-v2-nostep, fig.cap="Sanity Checking 5 with re-implemented edge list, no step", fig.show='asis'>>=
plot.thesis.data("/home/dchen/git/repast-neural-network-agent-based-model/R/data/sanity5-new-external-no-step.csv", 10, 10)
@

\newpage
\subsection{Sanity 6}
<<plot-sanity-6, fig.cap="Sanity Checking 6 with re-implemented edge list", fig.show='asis'>>=
plot.thesis.data("/home/dchen/git/repast-neural-network-agent-based-model/R/data/sanity6.csv", 10, 10)
@

\newpage
\subsubsection{Sanity 6 no decay}
<<plot-sanity-6-nodecay, fig.cap="Sanity Checking 6 with re-implemented edge list no decay", fig.show='asis'>>=
plot.thesis.data("/home/dchen/git/repast-neural-network-agent-based-model/R/data/sanity6-nodecay.csv", 10, 10)
@

\newpage
\subsection{Sanity 7 no decay}
<<plot-sanity-7-nodecay, fig.cap="Sanity Checking 7 with re-implemented edge list no decay", fig.show='asis'>>=
plot.thesis.data("/home/dchen/git/repast-neural-network-agent-based-model/R/data/sanity7-nodecay.csv", 10, 10)
@

\newpage
\subsection{Sanity 8}
<<plot-sanity-8, fig.cap="Sanity Checking 8", fig.show='asis'>>=
plot.thesis.data("/home/dchen/git/repast-neural-network-agent-based-model/R/data/sanity8.csv", 10, 10)
@

\newpage
\subsection{Sanity 9}
<<plot-sanity-9, fig.cap="Sanity Checking 9", fig.show='asis'>>=
plot.thesis.data("/home/dchen/git/repast-neural-network-agent-based-model/R/data/sanity9.csv", 10, 10)
@

\newpage
\subsection{Sanity 10: 1-5}
<<>>=
plot.thesis.data("/home/dchen/git/repast-neural-network-agent-based-model/R/data/sanity10-1.csv", 10, 10)
@
\newpage
<<>>=
plot.thesis.data("/home/dchen/git/repast-neural-network-agent-based-model/R/data/sanity10-2.csv", 10, 10)
@
\newpage
<<>>=
plot.thesis.data("/home/dchen/git/repast-neural-network-agent-based-model/R/data/sanity10-3.csv", 10, 10)
@
\newpage
<<>>=
plot.thesis.data("/home/dchen/git/repast-neural-network-agent-based-model/R/data/sanity10-4.csv", 10, 10)
@
\newpage
<<>>=
plot.thesis.data("/home/dchen/git/repast-neural-network-agent-based-model/R/data/sanity10-5.csv", 10, 10)
@

\end{document}
